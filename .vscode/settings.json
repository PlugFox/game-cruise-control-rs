{
    "editor.rulers": [
        100
    ],
    "search.exclude": {
        "coverage": true,
        "build": true,
        "target": true,
        "**/Cargo.lock": true
    },
    // Remove from file watching
    "files.watcherExclude": {
        "coverage": true,
        "build": true,
        "target": true,
        "**/target/**": true,
        "**/.git/objects/**": true,
        "**/node_modules/**": true
    },
    "files.exclude": {
        "**/target/debug": true,
        "**/target/doc": true,
        "**/target/.rustc_info.json": true,
        "**/target/CACHEDIR.TAG": true
    },
    // Causes the debug view to automatically appear when a breakpoint is hit. This
    // setting is global and not configurable per-language.
    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.patterns": {
        ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
        "readme.*": "authors, backers.md, changelog*, citation*, code_of_conduct.md, codeowners, contributing.md, contributing_*.md, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors.md, how_to.md, howto.md",
        "Cargo.toml": "Cargo.lock, .cargo"
    },
    // Rust-analyzer settings
    "rust-analyzer.check.command": "clippy",
    "rust-analyzer.check.allTargets": true,
    "rust-analyzer.check.features": "all",
    "rust-analyzer.cargo.buildScripts.enable": true,
    "rust-analyzer.procMacro.enable": true,
    "rust-analyzer.diagnostics.enable": true,
    "rust-analyzer.completion.addCallParenthesis": true,
    "rust-analyzer.completion.addCallArgumentSnippets": true,
    "rust-analyzer.inlayHints.enable": true,
    "rust-analyzer.inlayHints.parameterHints.enable": true,
    "rust-analyzer.inlayHints.typeHints.enable": true,
    "rust-analyzer.inlayHints.chainingHints.enable": true,
    "rust-analyzer.lens.enable": true,
    "rust-analyzer.lens.run.enable": true,
    "rust-analyzer.lens.debug.enable": true,
    "rust-analyzer.runnables.extraTestBinaryArgs": [
        "--nocapture"
    ],
    "rust-analyzer.runnables.extraEnv": {
        "RUST_LOG": "debug",
        "RUST_BACKTRACE": "1"
    },
    // Editor settings
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit"
    },
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    // Language-specific settings
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer",
        "editor.formatOnSave": true,
        "editor.semanticHighlighting.enabled": true
    },
    "[toml]": {
        "editor.defaultFormatter": "tamasfe.even-better-toml"
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    // Terminal settings
    "terminal.integrated.env.windows": {
        "RUST_LOG": "debug",
        "RUST_BACKTRACE": "1"
    },
    "terminal.integrated.env.linux": {
        "RUST_LOG": "debug",
        "RUST_BACKTRACE": "1"
    },
    "terminal.integrated.env.osx": {
        "RUST_LOG": "debug",
        "RUST_BACKTRACE": "1"
    },
    // Test discovery and execution settings
    /* "rust-analyzer.checkOnSave.extraArgs": [
        "--target-dir",
        "target/analyzer"
    ], */
    "rust-analyzer.cargo.targetDir": "target/analyzer",
    // Performance optimizations
    /* "rust-analyzer.files.excludeDirs": [
        "target/debug",
        "target/release"
    ], */
    "rust-analyzer.workspace.symbol.search.scope": "workspace_and_dependencies",
    "rust-analyzer.workspace.symbol.search.kind": "all_symbols",
    "cSpell.enabledFileTypes": {
        "json": true,
        "md": true,
        "sql": true,
        "toml": false, // Disable spell checking for cargo.toml files
        "rs": false, // Disable spell checking for Rust files
        "*": false // Disable spell checking for all other file types
    }
}